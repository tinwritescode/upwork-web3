import {
  Box,
  Center,
  Container,
  Flex,
  Spinner,
  useMediaQuery,
} from "@chakra-ui/react";
import Head from "next/head";
import { memo } from "react";
import { AppHeader } from "../components";
import { useHydrated } from "../core/hooks/useHydrated";

const DefaultLayout = ({ children }: { children: React.ReactElement }) => {
  const isHydrated = useHydrated();
  const [isSmallerThan750] = useMediaQuery("(max-width: 750px)");

  return isHydrated ? (
    <Flex direction="column" height="calc(100vh)">
      <Head>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppHeader />

      <Box maxW="full" overflow="auto" flexGrow={1}>
        <Box as="main" pb={isSmallerThan750 ? 20 : 0}>
          {children}
        </Box>

        <Flex
          position="fixed"
          bottom={4}
          insetX={4}
          zIndex={1}
          hidden={!isSmallerThan750}
        >
          {/* {links.map(renderLinks)} */}
        </Flex>
      </Box>
    </Flex>
  ) : (
    <Center h="calc(100vh)">
      <Spinner size="lg" />
    </Center>
  );
};

export interface Props {
  isOpen: boolean;
  onClose: () => void;
}

export default memo(DefaultLayout);
